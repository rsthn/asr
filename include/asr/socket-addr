#ifndef __ASR_SOCKET_ADDR_H
#define __ASR_SOCKET_ADDR_H

#include <asr/defs>
#include <ostream>

#if __WIN32__
    #include <winsock2.h>
    #include <ws2tcpip.h>
#else
    #include <sys/socket.h>
    #include <arpa/inet.h>
    #include <netdb.h>
    #include <unistd.h>
    #include <fcntl.h>
    #include <errno.h>
#endif

namespace asr
{
    /**
     * Utility class to manipulate socket address descriptors.
     */
    class SockAddr
    {
        public:

        int length;
        struct sockaddr data;

        SockAddr(int length) : length(length)
        { }

        virtual ~SockAddr() { }
        virtual void reset() { }

        int get_family() {
            return data.sa_family;
        }

        virtual SockAddr *alloc() const = 0;

        virtual void dump(std::ostream& os) const = 0;

        friend std::ostream& operator<<(std::ostream& os, const SockAddr *addr) {
            addr->dump(os);
            return os;
        }
    };

};

#endif
